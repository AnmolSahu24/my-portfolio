{"ast":null,"code":"var _jsxFileName = \"/Users/anmol.sahu/Documents/Learning-Projects/my-portfolio/src/components/ThemeToggler.jsx\";\nimport React from 'react';\nimport DarkModeToggle from 'react-dark-mode-toggle';\nimport PropTypes from 'prop-types';\nimport AppContext from '../AppContext';\nfunction ThemeToggler(props) {\n  const {\n    onClick\n  } = props;\n  const handleOnChange = darkMode => {\n    darkMode.toggle();\n    onClick();\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, values => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DarkModeToggle, {\n    onChange: () => handleOnChange(values.darkMode),\n    checked: values.darkMode.value,\n    size: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }))));\n}\nThemeToggler.propTypes = {\n  onClick: PropTypes.func\n};\nThemeToggler.defaultProps = {\n  onClick: () => {}\n};\nexport default ThemeToggler;","map":{"version":3,"names":["React","DarkModeToggle","PropTypes","AppContext","ThemeToggler","props","onClick","handleOnChange","darkMode","toggle","createElement","Fragment","Consumer","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","values","style","marginBottom","onChange","checked","value","size","propTypes","func","defaultProps"],"sources":["/Users/anmol.sahu/Documents/Learning-Projects/my-portfolio/src/components/ThemeToggler.jsx"],"sourcesContent":["import React from 'react';\nimport DarkModeToggle from 'react-dark-mode-toggle';\nimport PropTypes from 'prop-types';\nimport AppContext from '../AppContext';\n\nfunction ThemeToggler(props) {\n  const { onClick } = props;\n  const handleOnChange = (darkMode) => {\n    darkMode.toggle();\n    onClick();\n  };\n\n  return (\n    <>\n      <AppContext.Consumer>\n        {(values) => (\n          <div style={{ marginBottom: 8 }}>\n            <DarkModeToggle\n              onChange={() => handleOnChange(values.darkMode)}\n              checked={values.darkMode.value}\n              size={50}\n            />\n          </div>\n        )}\n      </AppContext.Consumer>\n    </>\n  );\n}\n\nThemeToggler.propTypes = {\n  onClick: PropTypes.func,\n};\nThemeToggler.defaultProps = {\n  onClick: () => {},\n};\n\nexport default ThemeToggler;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,eAAe;AAEtC,SAASC,YAAYA,CAACC,KAAK,EAAE;EAC3B,MAAM;IAAEC;EAAQ,CAAC,GAAGD,KAAK;EACzB,MAAME,cAAc,GAAIC,QAAQ,IAAK;IACnCA,QAAQ,CAACC,MAAM,CAAC,CAAC;IACjBH,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEN,KAAA,CAAAU,aAAA,CAAAV,KAAA,CAAAW,QAAA,qBACEX,KAAA,CAAAU,aAAA,CAACP,UAAU,CAACS,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChBC,MAAM,iBACNnB,KAAA,CAAAU,aAAA;IAAKU,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAE,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BlB,KAAA,CAAAU,aAAA,CAACT,cAAc;IACbqB,QAAQ,EAAEA,CAAA,KAAMf,cAAc,CAACY,MAAM,CAACX,QAAQ,CAAE;IAChDe,OAAO,EAAEJ,MAAM,CAACX,QAAQ,CAACgB,KAAM;IAC/BC,IAAI,EAAE,EAAG;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACV,CACE,CAEY,CACrB,CAAC;AAEP;AAEAd,YAAY,CAACsB,SAAS,GAAG;EACvBpB,OAAO,EAAEJ,SAAS,CAACyB;AACrB,CAAC;AACDvB,YAAY,CAACwB,YAAY,GAAG;EAC1BtB,OAAO,EAAEA,CAAA,KAAM,CAAC;AAClB,CAAC;AAED,eAAeF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}