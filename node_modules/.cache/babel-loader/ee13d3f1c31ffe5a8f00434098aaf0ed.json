{"ast":null,"code":"var _jsxFileName = \"/Users/anmol.sahu/Documents/Learning-Projects/my-portfolio/src/components/projects/ProjectCard.jsx\";\nimport React, { useContext } from 'react';\nimport { Button, Card, Badge, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5\n  },\n  cardStyle: {\n    borderRadius: 10\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700\n  },\n  cardTextStyle: {\n    textAlign: 'left'\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10\n  },\n  buttonStyle: {\n    margin: 5\n  }\n};\nconst ProjectCard = props => {\n  var _project$links;\n  const theme = useContext(ThemeContext);\n  const parseBodyText = text => /*#__PURE__*/React.createElement(ReactMarkdown, {\n    children: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 35\n    }\n  });\n  const {\n    project\n  } = props;\n  return /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      ...styles.cardStyle,\n      backgroundColor: theme.cardBackground,\n      borderColor: theme.cardBorderColor\n    },\n    text: theme.bsSecondaryVariant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: project === null || project === void 0 ? void 0 : project.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    style: styles.cardTitleStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, project.title), /*#__PURE__*/React.createElement(Card.Text, {\n    style: styles.cardTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, parseBodyText(project.bodyText))), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, project === null || project === void 0 ? void 0 : (_project$links = project.links) === null || _project$links === void 0 ? void 0 : _project$links.map(link => /*#__PURE__*/React.createElement(Button, {\n    key: link.href,\n    style: styles.buttonStyle,\n    variant: 'outline-' + theme.bsSecondaryVariant,\n    onClick: () => window.open(link.href, '_blank'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, link.text))), project.tags && /*#__PURE__*/React.createElement(Card.Footer, {\n    style: {\n      backgroundColor: theme.cardFooterBackground\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, project.tags.map(tag => /*#__PURE__*/React.createElement(Badge, {\n    key: tag,\n    pill: true,\n    bg: theme.bsSecondaryVariant,\n    text: theme.bsPrimaryVariant,\n    style: styles.badgeStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, tag)))));\n};\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      href: PropTypes.string.isRequired\n    })),\n    tags: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired\n};\nexport default ProjectCard;","map":{"version":3,"names":["React","useContext","Button","Card","Badge","Col","PropTypes","ThemeContext","ReactMarkdown","styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","ProjectCard","props","_project$links","theme","parseBodyText","text","createElement","children","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","project","style","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","Img","variant","src","image","Body","Title","title","Text","bodyText","links","map","link","key","href","onClick","window","open","tags","Footer","cardFooterBackground","tag","pill","bg","bsPrimaryVariant","propTypes","shape","string","isRequired","arrayOf"],"sources":["/Users/anmol.sahu/Documents/Learning-Projects/my-portfolio/src/components/projects/ProjectCard.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'left',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst ProjectCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n\n  const { project } = props;\n\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={project?.image} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(project.bodyText)}\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Body>\n          {project?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={'outline-' + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {project.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {project.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </Col>\n  );\n};\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      href: PropTypes.string.isRequired,\n    })),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default ProjectCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}